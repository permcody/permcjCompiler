//
// Randomly generated C- code
//
// This is truly inhumanely perverse!!  
// You should see it on a single line! :-)
//
bool w(void)
{
    void w;
    bool v;
    while (-v)
	if (true + v) {
	    bool v;
	    while (-11 - 3) {
	    }
	}
	else;
    if (u = !y) {
	bool z;
	y()>--x;
	true;
    }
    else if (w = 0) { {
    }
    }
    else if (u())
	if (x + 7 - v)
	    v;
}

int z;
int z;

bool x(void)
{
    void v[7];
    x = u%true/w*(v && 0) && 3;
} bool y;


int w(bool z)
{
    if (w/v + w)
	return z = 0*-z;
    else
	y + (u);
    w + w(x);
}

int v[0];
bool v;
int x[1];
void u;
int y(void)
{
    void x;
    int x[11];
}

int v[11];
bool y(void)
{
    void v;
    while (z%v - y/y(v = true, (w) + (u/w*u) <= 1)*0)
	if (w = y) {
	    if (x = -7 - 0 || w)
		w;
	    w() != 7 + y/1;
	}
	else if (u = y()/y[y = w = v = -7])
	    if (v)
		1%v + y;
	    else
		while (y*y)
		    y = u = z[v = 7 >= y*y + x] + w - 0/z;
	else if (v + v)
	    if ((x)*false && -u*v)
		y;
	    else if (1)
		if (v)
		    7;
    if (x = y);
    else if (w())
	while (y = v)
	    v && v*v/z(x = -11 - u)/y*!v;
    else if (w
	     && v(x =
		  z(x(u*3%u, v)/y*w + 7>w(0/1 - y[y = w(z = 7)]),
		    w = -y))) {
    }
}
void v(void)
{
    int y[1];
    int u;
    bool u[7];
    bool y;;
}

int u[3];
void w[11];
int u[3];
int x(int z[], int v, int u)
{
    void v[3];
} int v[7];
bool w;
int v;
void v(bool x)
{
    bool v;
    int v;
    bool v;
}
